{"version":3,"sources":["ui.sass","<no source>","helpers/_colors.sass","ui.css","helpers/_mixins.sass"],"names":[],"mappings":"AAWA,KACC,2BAA4B,AAC5B,2BAA8B,CAEI,AAJnC,aAIE,yBAA4B,CAAG,AAEjC,WACC,iBAAkB,AAClB,WAAY,AACZ,kBAAmB,AAEnB,qBAAuB,CAED,AAEvB,gBACC,WAAa,CAAG,AC3BjB,QD6CC,eAAiB,CAflB,AC9BA,GD+BC,eAAgB,AAEhB,qBAAsB,AACtB,WE7BkB,AF8BlB,wBAA0B,CAAG,AAE9B,KACC,qBAAsB,AACtB,sBAA0B,AAC1B,eAAwB,AACxB,WAAe,AACf,kBAAmB,AACnB,YAAa,AACb,qBAAsB,AAEtB,kBAAmB,AACnB,eAAgB,AAChB,mBAAqB,AACrB,wBAA0B,CAgCO,AA5ClC,uBAcE,gBAAoB,AACpB,aE7C0B,CF6CG,AAf/B,YAkBE,YAAa,AAEb,iBAAmB,CAIoB,AAxBzC,oCAsBG,mBEpDyB,AFqDzB,WAAe,AACf,oBEtDyB,CFsDW,AAxBvC,YA0BE,qBAAsB,AACtB,cEzD0B,AF0D1B,wBE1D0B,CF8Da,ACrEzC,sBDyFC,SAAU,AACV,+BAAA,AAAqB,0BAAA,CArDtB,ACrCA,cDuEE,gBAAiB,AACjB,gBAAoB,AACpB,cElE0B,AFmE1B,eAAgB,AAChB,cAAe,AACf,aAAc,AACd,YAAa,AACb,YAAa,AACb,iBAAmB,CAEW,AAIhC,QACC,eAAgB,AAChB,iBAAkB,AAClB,WAAY,AAGZ,YAAa,AACb,oBAAA,AAAc,aAAA,AACd,UAAY,CAQsB,AAhBnC,YAUE,WAAY,AACZ,YAAa,AACb,UAAW,AACX,kBAAmB,AACnB,mBAAsB,CAES,AAhBjC,kBAgBG,YE9FyB,CF8FG,AAG/B,oBACC,MACC,0BAA4B,CG0B3B,AHxBF,IACC,4BAA8B,CG0B7B,CAIF,AHtBD,kEAEC,aAAc,AACd,wBAAyB,AACzB,QAAU,CAAG,AAGd,UASC,mBAAoB,AACpB,WAAY,AACZ,YAAa,AACb,mBAAqB,CAyCqB,AArD3C,gCAII,oBAAsB,CAAG,AAJ7B,0EAMI,SAAW,CAEM,AARrB,iBAcE,cAAgB,CAAG,AAdrB,uBAgBE,kBAAmB,AACnB,SAAW,CA2BiC,AA5C9C,8BAmBG,kBAAmB,AACnB,kBAAoB,CAwBqB,AA5C5C,qCAsBI,WAAY,AACZ,kBAAmB,AACnB,SAAU,AACV,OAAQ,AACR,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,eAAwB,AACxB,wBEnJwB,CFmJgB,AA9B5C,oCAgCI,WAAY,AACZ,kBAAmB,AACnB,QAAS,AACT,SAAU,AACV,WAAY,AACZ,WAAY,AACZ,sBAA0B,AAC1B,gBAAiB,AACjB,kBAAmB,AACnB,6BAAA,AAAiB,yBAAA,AACjB,mBAAoB,AACpB,UAAW,AACX,wBAAmC,CAAG,AA5C1C,gCAgDI,kBErKwB,CFqKU,AAhDtC,+BAkDI,SAAW,CAAG,AAlDlB,6EAqDM,aE1KsB,CF0KO,AACnC,WACC,eAAgB,AAChB,WEpLc,AFwLd,qBAAsB,AACtB,eAAgB,AAChB,kBAAmB,AACnB,OAAS,CALU,AAJpB,aAIE,UEtLa,CFsLG,AAClB,cAME,eAAgB,AAChB,gBAAiB,AACjB,kBAAoB,CAAG,AARzB,eAUE,WAAY,AACZ,iBAAmB,CAAG,AAaxB,WACC,eAAgB,AAChB,MAAO,AACP,OAAQ,AACR,WAAY,AACZ,YAAa,AACb,gBAAoB,AACpB,YAAc,CA2Ba,AAlC5B,wBASE,aAAc,AACd,cAAe,AACf,kBAAmB,AACnB,QAAS,AACT,+BAAA,AAAqB,2BAAA,AACrB,WAAa,CAAG,AAdlB,oBAgBE,iBAAkB,AAClB,qBAAsB,AACtB,sBAAuB,AACvB,iBAAkB,AAClB,cAAgB,CAAG,AApBrB,eAsBE,YAAa,AACb,aAAc,AACd,kBAAmB,AACnB,QAAS,AACT,SAAU,AACV,mCAAA,AAAoB,+BAAA,AACpB,kBAAqB,CAMG,AAlC1B,gEA8BG,YAAa,AACb,iBAAkB,AAClB,kBAAqB,CAAG,AAhC3B,oBAkCG,gBAAkB,CAAG,AAKxB,IACC,UAAW,AACX,sBAAyB,CAER,AAJlB,cAIE,SAAW,CAAG,AAIhB,aACC,uBAAyB,CIzPxB,AJyP2B,yCA3P5B,WACC,sBAAyB,CAAG,CGD7B,ACFC,yCJMD,WACC,sBAAyB,CAAG,AAQ9B,WAOE,cAAgB,CAAK,CGdtB","file":"ui.css","sourcesContent":["@import \"helpers/colors\";\n@import \"helpers/mixins\";\n\n@include rmin(641) {\n\t.hidden-sm {\n\t\tdisplay: none !important; } }\n\n@include r(640) {\n\t.hidden-xs {\n\t\tdisplay: none !important; } }\n\nbody {\n\tfont-family: 'Proxima Nova';\n\toverflow-x: hidden !important;\n\t&.is-open {\n\t\toverflow: hidden !important; } }\n\n.container {\n\tmax-width: 1200px;\n\twidth: 100%;\n\tposition: relative;\n\theight: 100%;\n\tbox-sizing: border-box;\n\t@include r(640) {\n\t\tpadding: 0 40px; } }\n\n.row {\n\theight: 100%; }\n\n\nh2 {\n\tfont-size: 24px;\n\tfont-weight: 600;\n\tletter-spacing: 1.8px;\n\tcolor: $black-two;\n\ttext-transform: uppercase; }\n\n.btn {\n\ttext-decoration: none;\n\tborder: 1px solid #ffffff;\n\tbackground: transparent;\n\tcolor: #ffffff;\n\tpadding: 15px 40px;\n\theight: 100%;\n\tletter-spacing: 1.6px;\n\tfont-weight: 600;\n\ttext-align: center;\n\tcursor: pointer;\n\ttransition: all 0.3s;\n\ttext-transform: lowercase;\n\t&:hover {\n\t\tbackground: #ffffff;\n\t\tcolor: $dark-grey-blue-two; }\n\t&--white {\n\t\tbackground: #ffffff;\n\t\twidth: 170px;\n\t\tcolor: $dark-grey-blue-two;\n\t\tmargin-right: 15px;\n\t\t&:hover {\n\t\t\tbackground: $dark-grey-blue-two;\n\t\t\tcolor: #ffffff;\n\t\t\tborder-color: $dark-grey-blue-two; } }\n\t&--thank {\n\t\tdisplay: inline-block;\n\t\tcolor: $dark-grey-blue-two;\n\t\tborder: solid 2px $dark-grey-blue-two;\n\t\t&:hover {\n\t\t\tbackground: $dark-grey-blue-two;\n\t\t\tcolor: #ffffff;\n\t\t\tborder-color: $dark-grey-blue-two; } }\n\t&--contact {\n\t\tmargin-top: 80px;\n\t\tbackground: #ffffff;\n\t\tcolor: $dark-grey-blue-two;\n\t\tfont-size: 24px;\n\t\tdisplay: block;\n\t\tpadding: 22px;\n\t\theight: 80px;\n\t\twidth: 395px;\n\t\tposition: relative;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%); } }\n\n\n\n.social {\n\tposition: fixed;\n\tmax-width: 1200px;\n\twidth: 100%;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tbottom: 70px;\n\tdisplay: flex;\n\tz-index: 10;\n\tsvg {\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tfill: #fff;\n\t\tmargin-right: 10px;\n\t\ttransition: fill 0.3s;\n\t\t&:hover {\n\t\t\tfill: $dark-grey-blue-two; } } }\n\n\n@keyframes Gradient {\n\t0% {\n\t\tbackground-position: 0% 50%; }\n\n\t50% {\n\t\tbackground-position: 100% 50%; }\n\n\t100% {\n\t\tbackground-position: 0% 50%; } }\n\n\n\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n\tdisplay: none;\n\t-webkit-appearance: none;\n\tmargin: 0; }\n\n\n.checkbox {\n\t&.invalid {\n\t\t+ .label {\n\t\t\t&:before {\n\t\t\t\tborder: 1px solid red; }\n\t\t\t+ .label-for {\n\t\t\t\tcolor: red;\n\t\t\t\ta {\n\t\t\t\t\tcolor: red; } } } }\n\tvertical-align: top;\n\twidth: 25px;\n\theight: 25px;\n\tmargin-bottom: 175px;\n\t+ .label {\n\t\tcursor: pointer; }\n\t&:not(checked) {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\t+ .label {\n\t\t\tposition: relative;\n\t\t\tpadding: 0 0 0 40px;\n\t\t\t&:before {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: -4px;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 30px;\n\t\t\t\theight: 30px;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbackground: transparent;\n\t\t\t\tborder: 1px solid $dark-grey-blue-two; }\n\t\t\t&:after {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 5px;\n\t\t\t\tleft: 8px;\n\t\t\t\twidth: 15px;\n\t\t\t\theight: 9px;\n\t\t\t\tborder: 3px solid #ffffff;\n\t\t\t\tborder-top: none;\n\t\t\t\tborder-right: none;\n\t\t\t\ttransform: rotate(-45deg);\n\t\t\t\ttransition: all .2s;\n\t\t\t\topacity: 0;\n\t\t\t\tbackground: transparent !important; } } }\n\t&:checked {\n\t\t+ .label {\n\t\t\t&:before {\n\t\t\t\tbackground: $dark-grey-blue-two; }\n\t\t\t&:after {\n\t\t\t\topacity: 1; }\n\t\t\t+ .label-for {\n\t\t\t\t\th3, p {\n\t\t\t\t\t\tcolor: $dark-grey-blue-two; } } } } }\n.label-for {\n\tfont-size: 16px;\n\tcolor: $black;\n\ta {\n\t\tcolor: $black; } }\n.label-for {\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tposition: relative;\n\ttop: 2px;\n\th3 {\n\t\tfont-size: 18px;\n\t\tfont-weight: 600;\n\t\tmargin-bottom: 10px; }\n\timg {\n\t\twidth: 45px;\n\t\tmargin-right: 15px; } }\n\n\n\n\n\n\n\n\n\n\n\n\n#preloader {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: #ffffff;\n\tz-index: 1000;\n\t.svg-wrapper {\n\t\theight: 150px;\n\t\tmargin: 0 auto;\n\t\tposition: relative;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\twidth: 150px; }\n\t.animate {\n\t\tfill: transparent;\n\t\tstroke-dasharray: 300;\n\t\tstroke-dashoffset: 600;\n\t\tstroke-width: 5px;\n\t\tstroke: #2d6965; }\n\tsvg {\n\t\twidth: 150px;\n\t\theight: 150px;\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\ttransition: all 0.3s;\n\t\tpath, line, polyline {\n\t\t\tstroke: #000;\n\t\t\tstroke-width: 2px;\n\t\t\ttransition: all 0.3s; }\n\t\tpath {\n\t\t\tfill: transparent; } } }\n\n\n\n//Ленивая загрузка\nimg {\n\topacity: 1;\n\ttransition: opacity 0.3s;\n\t&[data-src] {\n\t\topacity: 0; } }\n\n\n\ninput, select {\n\t-webkit-appearance: none; }\n",null,"$black: #333333;\n// $dark-grey-blue: #306d68\n$greeny-blue: #54c3aa;\n$white: #ffffff;\n$brownish-grey: #666666;\n$black-two: #000000;\n$warm-grey: #999999;\n$dark-grey-blue-two: #2d6965;\n// $dark-grey-blue-three: #336666\n$darkish-pink: #e35573;\n$pinkish-grey: #cccccc;\n$light-tan: #faf7bf;\n$light-green-blue: #58fec2;\n$light-tan-two: #fcf8c0;\n$dark: #120b0f;\n$denim: #337272;\n","@media only screen and (min-width: 641px) {\n  .hidden-sm {\n    display: none !important;\n  }\n}\n\n@media only screen and (max-width: 640px) {\n  .hidden-xs {\n    display: none !important;\n  }\n}\n\nbody {\n  font-family: 'Proxima Nova';\n  overflow-x: hidden !important;\n}\n\nbody.is-open {\n  overflow: hidden !important;\n}\n\n.container {\n  max-width: 1200px;\n  width: 100%;\n  position: relative;\n  height: 100%;\n  box-sizing: border-box;\n}\n\n@media only screen and (max-width: 640px) {\n  .container {\n    padding: 0 40px;\n  }\n}\n\n.row {\n  height: 100%;\n}\n\nh2 {\n  font-size: 24px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n  color: #000000;\n  text-transform: uppercase;\n}\n\n.btn {\n  text-decoration: none;\n  border: 1px solid #ffffff;\n  background: transparent;\n  color: #ffffff;\n  padding: 15px 40px;\n  height: 100%;\n  letter-spacing: 1.6px;\n  font-weight: 600;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  text-transform: lowercase;\n}\n\n.btn:hover {\n  background: #ffffff;\n  color: #2d6965;\n}\n\n.btn--white {\n  background: #ffffff;\n  width: 170px;\n  color: #2d6965;\n  margin-right: 15px;\n}\n\n.btn--white:hover {\n  background: #2d6965;\n  color: #ffffff;\n  border-color: #2d6965;\n}\n\n.btn--thank {\n  display: inline-block;\n  color: #2d6965;\n  border: solid 2px #2d6965;\n}\n\n.btn--thank:hover {\n  background: #2d6965;\n  color: #ffffff;\n  border-color: #2d6965;\n}\n\n.btn--contact {\n  margin-top: 80px;\n  background: #ffffff;\n  color: #2d6965;\n  font-size: 24px;\n  display: block;\n  padding: 22px;\n  height: 80px;\n  width: 395px;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.social {\n  position: fixed;\n  max-width: 1200px;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 70px;\n  display: flex;\n  z-index: 10;\n}\n\n.social svg {\n  width: 32px;\n  height: 32px;\n  fill: #fff;\n  margin-right: 10px;\n  transition: fill 0.3s;\n}\n\n.social svg:hover {\n  fill: #2d6965;\n}\n\n@keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  display: none;\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.checkbox {\n  vertical-align: top;\n  width: 25px;\n  height: 25px;\n  margin-bottom: 175px;\n}\n\n.checkbox.invalid + .label:before {\n  border: 1px solid red;\n}\n\n.checkbox.invalid + .label + .label-for {\n  color: red;\n}\n\n.checkbox.invalid + .label + .label-for a {\n  color: red;\n}\n\n.checkbox + .label {\n  cursor: pointer;\n}\n\n.checkbox:not(checked) {\n  position: absolute;\n  opacity: 0;\n}\n\n.checkbox:not(checked) + .label {\n  position: relative;\n  padding: 0 0 0 40px;\n}\n\n.checkbox:not(checked) + .label:before {\n  content: '';\n  position: absolute;\n  top: -4px;\n  left: 0;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: transparent;\n  border: 1px solid #2d6965;\n}\n\n.checkbox:not(checked) + .label:after {\n  content: '';\n  position: absolute;\n  top: 5px;\n  left: 8px;\n  width: 15px;\n  height: 9px;\n  border: 3px solid #ffffff;\n  border-top: none;\n  border-right: none;\n  transform: rotate(-45deg);\n  transition: all .2s;\n  opacity: 0;\n  background: transparent !important;\n}\n\n.checkbox:checked + .label:before {\n  background: #2d6965;\n}\n\n.checkbox:checked + .label:after {\n  opacity: 1;\n}\n\n.checkbox:checked + .label + .label-for h3, .checkbox:checked + .label + .label-for p {\n  color: #2d6965;\n}\n\n.label-for {\n  font-size: 16px;\n  color: #333333;\n}\n\n.label-for a {\n  color: #333333;\n}\n\n.label-for {\n  display: inline-block;\n  cursor: pointer;\n  position: relative;\n  top: 2px;\n}\n\n.label-for h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n}\n\n.label-for img {\n  width: 45px;\n  margin-right: 15px;\n}\n\n#preloader {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: #ffffff;\n  z-index: 1000;\n}\n\n#preloader .svg-wrapper {\n  height: 150px;\n  margin: 0 auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 150px;\n}\n\n#preloader .animate {\n  fill: transparent;\n  stroke-dasharray: 300;\n  stroke-dashoffset: 600;\n  stroke-width: 5px;\n  stroke: #2d6965;\n}\n\n#preloader svg {\n  width: 150px;\n  height: 150px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: all 0.3s;\n}\n\n#preloader svg path, #preloader svg line, #preloader svg polyline {\n  stroke: #000;\n  stroke-width: 2px;\n  transition: all 0.3s;\n}\n\n#preloader svg path {\n  fill: transparent;\n}\n\nimg {\n  opacity: 1;\n  transition: opacity 0.3s;\n}\n\nimg[data-src] {\n  opacity: 0;\n}\n\ninput, select {\n  -webkit-appearance: none;\n}\n","// width\n@mixin r($width) {\n  @media only screen and (max-width: $width+ \"px\") {\n    @content; } }\n\n@mixin rmin($width) {\n  @media only screen and (min-width: $width+ \"px\") {\n    @content; } }\n\n// height\n@mixin rh($height) {\n  @media only screen and (max-height: $height + \"px\") {\n    @content; } }\n\n@mixin rhmin($height) {\n  @media only screen and (min-height: $height + \"px\") {\n    @content; } }\n\n\n\n@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {\n  #{$property}: #{$max-size}#{$unit};\n  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));\n  @media (max-width: #{$min-width}#{$unit}) {\n    #{$property}: #{$min-size}#{$unit}; }\n  @media (min-width: #{$max-width}#{$unit}) {\n    #{$property}: #{$max-size}#{$unit}; } }\n\n@mixin fs($sizeValue: 16) {\n  font-size: $sizeValue + px;\n  font-size: $sizeValue / 10 + rem; }\n\n@mixin text-overflow {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap; }\n\n@mixin hover {\n  .no-touch &:hover {\n    @content; } }\n\n%pseudo {\n  position: relative;\n  &:before,&:after {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0; } }\n@mixin pseudo {\n  @extend %pseudo; }\n\n@mixin coverdiv {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%; }\n\n@mixin cover {\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50% 50%; }\n\n@mixin bg-size($width: 100%, $height: 100%) {\n  background-size: $width $height; }\n\n// retina, also available as +hdpi\n@mixin retina {\n  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n    @content; } }\n\n// vertical-align at center\n@mixin vcenter {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%,-50%); }\n\n//simple gradient\n@mixin g($color1, $color2) {\n  background-image: linear-gradient($color1, $color2); }\n\n@mixin gh($color1, $color2) {\n  background-image: linear-gradient(left, $color1, $color2); }\n\n// font-family\n@mixin font($alias, $name) {\n  @font-face {\n    font-family: $alias;\n    src: url(\"../fonts/\" + $name + \".woff2\") format(\"woff2\"), url(\"../fonts/\" + $name + \".woff\") format(\"woff\");\n    font-weight: normal;\n    font-style: normal; } }\n// to use:\n//+font(black, cytiapro-black-webfont)\n\n// ROTATE\n@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {\n  transform: rotate($deg + deg);\n  filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand'); }\n\n// TRANSITION\n\n@mixin tr($what) {\n  transition: $what; }\n\n@mixin hide-text {\n  font: 0/0 a;\n  text-shadow: none;\n  color: transparent; }\n\n@mixin hidetext {\n  @include hide-text; }\n\n\n// IMPORTANT!!!! REQUIRES SPACES BETWEEN ELEMENTS, NO SUCH STUFF: </li><li>\n@mixin justify {\n  text-align: justify;\n  line-height: 0;\n  font-size: 0;\n  text-justify: newspaper;\n  text-align-last: justify;\n  &:after {\n    content: \"\";\n    display: inline-block;\n    width: 100%;\n    height: 0px;\n    visibility: hidden;\n    overflow: hidden; } }\n@mixin vertical {\n  text-align: center;\n  font-size: 0;\n  &:before {\n    content: \"\";\n    display: inline-block;\n    vertical-align: middle;\n    width: 0;\n    height: 100%; } }\n\n@mixin clr {\n  &:after {\n    content: \" \";\n    display: table;\n    clear: both; } }\n\n\n@mixin placeholder-color($color) {\n  &::placeholder {\n    color: $color; } }\n\n@mixin placeholder {\n  &::placeholder {\n    @content; } }\n\n@mixin gray {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'/></filter></svg>#grayscale\");\n  // Firefox 10+\n  filter: gray;\n  // IE6-9\n  -webkit-filter: grayscale(100%);\n  // Chrome 19+ & Safari 6+\n  filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1);\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)\"; }\n\n@mixin gray-half {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='saturate' values='0.5'/></filter></svg>#grayscale\");\n  // Firefox 10+\n  filter: gray alpha(opacity = 50);\n  // IE6-9\n  -webkit-filter: grayscale(50%);\n }  // Chrome 19+ & Safari 6+\n\n@mixin gray-zero {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0'/></filter></svg>#grayscale\");\n  -webkit-filter: grayscale(0%); }\n\n@mixin unselectable {\n  user-select: none; }\n\n@mixin nosel {\n  @include unselectable; }\n\n@mixin prevent-text {\n  word-break: break-all;\n  word-break: break-word;\n  hyphens: auto; }\n\n@mixin font-smoothing($val: antialiased) {\n  font-smoothing: $val; }\n\n@mixin selection {\n  & ::selection {\n    @content; } }\n@mixin sel {\n  @include selection; }\n\n@mixin gpu {\n  transform: translate3d(0, 0, 0); }\n\n@mixin scrollbar {\n  &::-webkit-scrollbar {\n    @content; } }\n\n@mixin scrollbar-track {\n  &::-webkit-scrollbar-track {\n    @content; } }\n\n@mixin scrollbar-thumb {\n  &::-webkit-scrollbar-thumb {\n    @content; } }\n\n@mixin scrollbar-track-piece {\n  &::-webkit-scrollbar-track-piece {\n    @content; } }\n\n//triangle\n@mixin arr($width, $height, $bg, $direction) {\n  width: 0px;\n  height: 0px;\n  border-style: solid;\n  @if $direction == t {\n    border-width: 0 $width / 2 + px $height + px $width / 2 + px;\n    border-color: transparent transparent $bg transparent; }\n  @if $direction == r {\n    border-width: $height / 2 + px 0 $height / 2 + px $width + px;\n    border-color: transparent transparent transparent $bg; }\n  @if $direction == b {\n    border-width: $height + px $width / 2 + px 0 $width / 2 + px;\n    border-color: $bg transparent transparent transparent; }\n  @if $direction == l {\n    border-width: $height / 2 + px $width + px $height / 2 + px 0;\n    border-color: transparent $bg transparent transparent; }\n  @if $direction == tl {\n    border-width: $height + px $width + px 0 0;\n    border-color: $bg transparent transparent transparent; }\n  @if $direction == tr {\n    border-width: 0 $width + px $height + px 0;\n    border-color: transparent $bg transparent transparent; }\n  @if $direction == br {\n    border-width: 0 0 $height + px $width + px;\n    border-color: transparent transparent $bg transparent; }\n  @if $direction == bl {\n    border-width: $width + px 0 0 $height + px;\n    border-color: transparent transparent transparent $bg; } }\n// example\n// +arr(500,50, #000, l)\n// +arr(500,50, #000, bl)\n\n@mixin rotate($var) {\n  transform: rotate($var+deg); }\n\n@mixin blur($var) {\n  filter: blur($var); }\n\n@mixin better-blur($radius) {\n  filter: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a' x='0' y='0' width='1' height='1' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='#{$radius}' result='b'/%3E%3CfeMorphology operator='dilate' radius='#{$radius}'/%3E %3CfeMerge%3E%3CfeMergeNode/%3E%3CfeMergeNode in='b'/%3E%3C/feMerge%3E%3C/filter%3E %3C/svg%3E#a\"); }\n\n@mixin scale($var) {\n  transform: scale($var); }\n\n@mixin counter($var, $sep) {\n  counter-reset: list + $var;\n  > li {\n    &:before {\n      content: counter(list + $var) $sep;\n      counter-increment: list + $var; } } }\n\n@mixin f($name, $font-size: null, $letter-spacing: null) {\n  $font-family: null;\n  @if $name == \"l\" {\n    $font-family: \"light\"; }\n  font-family: $font-family;\n  font-weight: normal;\n  @if $font-size != null {\n    font-size: $font-size + px; }\n  @if $letter-spacing != null {\n    letter-spacing: ($letter-spacing / 1000) + em; } }\n\n"]}